<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.its.modules.operation.dao.MemberDiscountDao">
    
	<sql id="memberDiscountColumns">
		a.discount_num AS "discountNum",
		a.discount_id AS "discountId",
		a.id AS "id",
		a.village_info_id AS "villageInfoId",
		a.account_id AS "accountId",
		a.obtain_date AS "obtainDate",
		a.valid_start AS "validStart",
		a.valid_end AS "validEnd",
		a.use_state AS "useState",
        a.use_order_id AS "userOrderId",
		a.receive_type AS "receiveType",
		a.order_type AS "orderType",
		a.order_id AS "orderId",
		a.use_date AS "useDate",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="memberDiscountJoins">
	   LEFT JOIN account b ON a.account_id = b.id
	</sql>
    
	<select id="get" resultType="MemberDiscount">
		SELECT 
			<include refid="memberDiscountColumns"/>
		FROM member_discount a
		<include refid="memberDiscountJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="MemberDiscount">
		SELECT 
			<include refid="memberDiscountColumns"/>
		FROM member_discount a
		<include refid="memberDiscountJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="discountId != null and discountId != ''">
                AND a.discount_id = #{discountId}
            </if>
			<if test="discountNum != null and discountNum != ''">
				AND (a.discount_num = #{discountNum} or b.phone_num = #{discountNum})
			</if>
			<if test="useState != null and useState != ''">
				AND a.use_state = #{useState}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="MemberDiscount">
		SELECT 
			<include refid="memberDiscountColumns"/>
		FROM member_discount a
		<include refid="memberDiscountJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO member_discount(
			discount_num,
			discount_id,
			id,
			village_info_id,
			account_id,
			obtain_date,
			valid_start,
			valid_end,
			use_state,
            use_order_id,
			receive_type,
			order_type,
			order_id,
			use_date,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{discountNum},
			#{discountId},
			#{id},
			#{villageInfoId},
			#{accountId},
			#{obtainDate},
			#{validStart},
			#{validEnd},
			#{useState},
            #{useOrderId},
			#{receiveType},
			#{orderType},
			#{orderId},
			#{useDate},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE member_discount SET 	
			discount_num = #{discountNum},
			discount_id = #{discountId},
			village_info_id = #{villageInfoId},
			account_id = #{accountId},
			obtain_date = #{obtainDate},
			valid_start = #{validStart},
			valid_end = #{validEnd},
			use_state = #{useState},
            use_order_id = #{useOrderId},
			receive_type = #{receiveType},
			order_type = #{orderType},
			order_id = #{orderId},
            use_date = #{useDate},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE member_discount SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
    <update id="deleteByDiscountId">
        UPDATE member_discount SET 
            del_flag = #{DEL_FLAG_DELETE}
        WHERE discount_id = #{discountId}
    </update>
    
    <update id="updateUseStateByDiscountId">
        UPDATE member_discount SET 
            use_state = #{useState}
        WHERE discount_id = #{discountId}
    </update>
	
	<select id="getNextDiscountId" resultType="java.lang.Long">
	   SELECT MAX(Discount_Num) 
	     FROM member_discount;
	</select>
	
	<select id="findExportList" resultType="MemberDiscount">
	   SELECT 
            (@rownum:=@rownum+1) AS serialNum,
            a.discount_num AS discountNum,
            b.coupon_name AS couponName,
            CASE 
                WHEN b.coupon_type = '0' THEN concat(b.coupon_money,'元券')
                WHEN b.coupon_type = '1' THEN concat(ROUND(b.coupon_money/10,1),'折券(上限',b.Upper_Limit_Money,'元)')
                ELSE NULL
            END AS discountContent,
            d.phone_num AS phoneNum,
            a.obtain_date AS obtainDate,
            a.use_order_id AS useOrderId,
            a.use_state AS useState,
            a.use_date AS useDate
        FROM member_discount a 
        LEFT JOIN coupon_manage b
               ON a.discount_id = b.id
        LEFT JOIN account d
              ON a.account_id = d.id,
            (select @rownum:=0) r
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="discountId != null and discountId != ''">
                AND a.discount_id = #{discountId}
            </if>
            <if test="discountNum != null and discountNum != ''">
                AND (a.discount_num = #{discountNum} or b.phone_num = #{discountNum})
            </if>
            <if test="useState != null and useState != ''">
                AND a.use_state = #{useState}
            </if>
        </where>
	</select>
	
</mapper>