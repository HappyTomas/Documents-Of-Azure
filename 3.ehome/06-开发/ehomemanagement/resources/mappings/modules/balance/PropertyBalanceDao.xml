<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.its.modules.balance.dao.PropertyBalanceDao">
    
	<sql id="propertyBalanceColumns">
		a.id AS "id",
		a.property_company_id AS "propertyCompanyId",
		a.balance_cycle AS "balanceCycle",
		a.balance_start_time AS "balanceStartTime",
		a.balance_end_time AS "balanceEndTime",
		a.balance_model AS "balanceModel",
		a.balance_state AS "balanceState",
		a.order_money AS "orderMoney",
		a.coupon_money AS "couponMoney",
		a.deduction_money AS "deductionMoney",
		a.pay_money AS "payMoney",
		a.check_state AS "checkState",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="propertyBalanceJoins">
	   left join property_company b on b.id = a.property_company_id
	</sql>
    
	<select id="get" resultType="PropertyBalance">
		SELECT 
			<include refid="propertyBalanceColumns"/>
		FROM property_balance a
		<include refid="propertyBalanceJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="PropertyBalance">
		SELECT 
			<include refid="propertyBalanceColumns"/>
		FROM property_balance a
		<include refid="propertyBalanceJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="propertyCompanyId != null and propertyCompanyId != ''">
				AND a.property_company_id = #{propertyCompanyId}
			</if>
			<if test="balanceCycle != null and balanceCycle != ''">
				AND a.balance_cycle = #{balanceCycle}
			</if>
            
            <if test="balanceStartTime != null and balanceStartTime != ''">
                AND a.balance_start_time &gt;= #{balanceStartTime}
            </if>
            <if test="balanceEndTime != null and balanceEndTime != ''">
                AND a.balance_end_time &lt; date_add(#{balanceEndTime}, interval 1 DAY)
            </if>
			<if test="balanceModel != null and balanceModel != ''">
				AND a.balance_model = #{balanceModel}
			</if>
			<if test="balanceState != null and balanceState != ''">
				AND a.balance_state = #{balanceState}
			</if>
			<if test="checkState != null and checkState != ''">
				AND a.check_state = #{checkState}
			</if>
            <if test="companyName != null and companyName != ''">
                AND b.Company_Name like 
                    <if test="dbName == 'oracle'">'%'||#{companyName}||'%'</if>
                    <if test="dbName == 'mssql'">'%'+#{companyName}+'%'</if>
                    <if test="dbName == 'mysql'">concat('%',#{companyName},'%')</if>
            </if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PropertyBalance">
		SELECT 
			<include refid="propertyBalanceColumns"/>
		FROM property_balance a
		<include refid="propertyBalanceJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="propertyCompanyId != null and propertyCompanyId != ''">
                AND a.property_company_id = #{propertyCompanyId}
            </if>
            <if test="balanceCycle != null and balanceCycle != ''">
                AND a.balance_cycle = #{balanceCycle}
            </if>
            
            <if test="balanceStartTime != null and balanceStartTime != ''">
                AND a.balance_start_time &gt;= #{balanceStartTime}
            </if>
            <if test="balanceEndTime != null and balanceEndTime != ''">
                AND a.balance_end_time &lt; date_add(#{balanceEndTime}, interval 1 DAY)
            </if>
            <if test="balanceModel != null and balanceModel != ''">
                AND a.balance_model = #{balanceModel}
            </if>
            <if test="balanceState != null and balanceState != ''">
                AND a.balance_state = #{balanceState}
            </if>
            <if test="checkState != null and checkState != ''">
                AND a.check_state = #{checkState}
            </if>
            <if test="companyName != null and companyName != ''">
                AND b.Company_Name like 
                    <if test="dbName == 'oracle'">'%'||#{companyName}||'%'</if>
                    <if test="dbName == 'mssql'">'%'+#{companyName}+'%'</if>
                    <if test="dbName == 'mysql'">concat('%',#{companyName},'%')</if>
            </if>
        </where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO property_balance(
			id,
			property_company_id,
			balance_cycle,
			balance_start_time,
			balance_end_time,
			balance_model,
			balance_state,
			order_money,
			coupon_money,
			deduction_money,
			pay_money,
			check_state,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{propertyCompanyId},
			#{balanceCycle},
			#{balanceStartTime},
			#{balanceEndTime},
			#{balanceModel},
			#{balanceState},
			#{orderMoney},
			#{couponMoney},
			#{deductionMoney},
			#{payMoney},
			#{checkState},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE property_balance SET 	
			property_company_id = #{propertyCompanyId},
			balance_cycle = #{balanceCycle},
			balance_start_time = #{balanceStartTime},
			balance_end_time = #{balanceEndTime},
			balance_model = #{balanceModel},
			balance_state = #{balanceState},
			order_money = #{orderMoney},
			coupon_money = #{couponMoney},
			deduction_money = #{deductionMoney},
			pay_money = #{payMoney},
			check_state = #{checkState},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE property_balance SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<select id="findListByPropertyBill" resultType="PropertyBalance">
       SELECT
            o.property_company_id as propertyInfoId,
            bi.balance_cycle as balanceCycle,
            CASE
        WHEN balance_cycle = '0' THEN
            DATE_FORMAT(
                date_sub(
                    o.pay_time,
                    INTERVAL DAYOFWEEK(o.pay_time) - 2 DAY
                ),
                '%Y-%m-%d 00:00:00'
            )
        WHEN balance_cycle = '1' THEN
            STR_TO_DATE(
                concat(
                    DATE_FORMAT(o.pay_time, '%Y%m'),
                    '01'
                ),
                '%Y%m%d %H:%i:%s'
            )
        WHEN balance_cycle = '2' THEN
            DATE_FORMAT(
                o.pay_time,
                '%Y-%m-%d 00:00:00'
            )
        ELSE
            NULL
        END AS balanceStartTime,
         CASE
        WHEN balance_cycle = '0' THEN
            DATE_FORMAT(
                date_sub(
                    o.pay_time,
                    INTERVAL DAYOFWEEK(o.pay_time) - 8 DAY
                ),
                '%Y-%m-%d 23:59:59'
            )
        WHEN balance_cycle = '1' THEN
            date_add(
                STR_TO_DATE(
                    concat(
                        DATE_FORMAT(
                            date_add(
                                o.pay_time,
                                INTERVAL 1 MONTH
                            ),
                            '%Y%m'
                        ),
                        '01'
                    ),
                    '%Y%m%d'
                ),
                INTERVAL - 1 SECOND
            )
        WHEN balance_cycle = '2' THEN
            DATE_FORMAT(
                o.pay_time,
                '%Y-%m-%d 23:59:59'
            )
        ELSE
            NULL
        END AS balanceEndTime,
         bi.balance_model as balanceModel,
         o.check_state AS balanceState,
         sum(o.Pay_Money) AS orderMoney,
         sum(o.Discount_Money) AS couponMoney,
         sum(
            CASE 
                WHEN bi.balance_model='0' THEN  (o.Pay_Money+o.Discount_Money)*bi.Collect_fees/100 
                ELSE  bi.Collect_Fees 
            END
        ) AS deductionMoney,
         sum(
            o.Pay_Money+o.Discount_Money-
            CASE 
                WHEN bi.balance_model='0' THEN  (o.Pay_Money+o.Discount_Money)*bi.Collect_fees/100 
                ELSE  bi.Collect_Fees 
            END
         ) AS payMoney,
         o.check_state as checkState
        FROM
            property_bill o,
            property_company bi
        WHERE
            o.check_state = '0'
        AND o.property_company_id = bi.id
        AND o.Pay_State = '1'
        AND o.pay_time &lt;= CASE
        WHEN balance_cycle = '0' THEN
            DATE_FORMAT(
                date_sub(
                    o.pay_time,
                    INTERVAL DAYOFWEEK(o.pay_time) - 8 DAY
                ),
                '%Y-%m-%d 23:59:59'
            )
        WHEN balance_cycle = '1' THEN
            date_add(
                STR_TO_DATE(
                    concat(
                        DATE_FORMAT(
                            date_add(
                                o.pay_time,
                                INTERVAL 1 MONTH
                            ),
                            '%Y%m'
                        ),
                        '01'
                    ),
                    '%Y%m%d'
                ),
                INTERVAL - 1 SECOND
            )
        WHEN balance_cycle = '2' THEN
            DATE_FORMAT(
                o.pay_time,
                '%Y-%m-%d 23:59:59'
            )
        ELSE
            o.pay_time
        END
        GROUP BY
            o.property_company_id,
            bi.balance_cycle,
            CASE
        WHEN balance_cycle = '0' THEN
            DATE_FORMAT(
                date_sub(
                    o.pay_time,
                    INTERVAL DAYOFWEEK(o.pay_time) - 2 DAY
                ),
                '%Y-%m-%d 00:00:00'
            )
        WHEN balance_cycle = '1' THEN
            STR_TO_DATE(
                concat(
                    DATE_FORMAT(o.pay_time, '%Y%m'),
                    '01'
                ),
                '%Y%m%d %H:%i:%s'
            )
        WHEN balance_cycle = '2' THEN
            DATE_FORMAT(
                o.pay_time,
                '%Y-%m-%d 00:00:00'
            )
        ELSE
            NULL
        END,
         CASE
        WHEN balance_cycle = '0' THEN
            DATE_FORMAT(
                date_sub(
                    o.pay_time,
                    INTERVAL DAYOFWEEK(o.pay_time) - 8 DAY
                ),
                '%Y-%m-%d 23:59:59'
            )
        WHEN balance_cycle = '1' THEN
            date_add(
                STR_TO_DATE(
                    concat(
                        DATE_FORMAT(
                            date_add(
                                o.pay_time,
                                INTERVAL 1 MONTH
                            ),
                            '%Y%m'
                        ),
                        '01'
                    ),
                    '%Y%m%d'
                ),
                INTERVAL - 1 SECOND
            )
        WHEN balance_cycle = '2' THEN
            DATE_FORMAT(
                o.pay_time,
                '%Y-%m-%d 23:59:59'
            )
        ELSE
            NULL
        END,
         bi.balance_model,
         o.check_state
	</select>
    
    <!-- 批量结算 ，修改待结算为已结算 -->
    <update id="batchBalance">
        UPDATE property_balance SET     
            balance_state = '1'
        WHERE id = #{id}
    </update>
    
    <!-- 结算单核对 ，修改未核对或者异常为已核对 -->
    <update id="check">
        UPDATE property_balance SET     
            check_state = '1'
        WHERE id = #{id}
    </update>
    
    <!-- 获取结算单申请单 -->
    <select id="findBalanceApply" resultType="PropertyBalance">
       SELECT
            @rownum := @rownum + 1 AS serialNum,
            c.Company_Name AS companyName,
            '' AS accountName,
            '' AS depositBank,
            '' AS bankAccount,
            a.NAME AS cityName,
            sum(b.Pay_Money) AS payMoney,
            b.remarks AS remark,
            min(b.balance_start_time) as balanceStartTime,
            max(b.balance_end_time) as balanceEndTime
        FROM
            (SELECT @rownum := 0) r,
            property_balance b,
            property_company c,
            sys_area a
        <where>
            b.property_company_id = c.id
            AND c.Addr_City = a.id
            <if test="propertyCompanyId != null and propertyCompanyId != ''">
                AND b.property_company_id = #{propertyCompanyId}
            </if>
            <if test="balanceStartTime != null and balanceStartTime != ''">
                AND b.balance_start_time &gt;= #{balanceStartTime}
            </if>
            <if test="balanceEndTime != null and balanceEndTime != ''">
                AND b.balance_end_time &lt; date_add(#{balanceEndTime}, interval 1 DAY)
            </if>
            <if test="balanceState != null and balanceState != ''">
                AND b.balance_state = #{balanceState}
            </if>
            <if test="checkState != null and checkState != ''">
                AND b.check_state = #{checkState}
            </if>
            <if test="companyName != null and companyName != ''">
                AND c.Company_Name like 
                    <if test="dbName == 'oracle'">'%'||#{companyName}||'%'</if>
                    <if test="dbName == 'mssql'">'%'+#{companyName}+'%'</if>
                    <if test="dbName == 'mysql'">concat('%',#{companyName},'%')</if>
            </if>
        </where>
        GROUP BY
            c.Company_Name,
            c.Addr_City
    </select>
	
</mapper>