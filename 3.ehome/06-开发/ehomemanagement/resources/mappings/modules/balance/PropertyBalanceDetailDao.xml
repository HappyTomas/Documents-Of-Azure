<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.its.modules.balance.dao.PropertyBalanceDetailDao">
    
	<sql id="propertyBalanceDetailColumns">
		a.id AS "id",
		a.property_balance_id AS "propertyBalanceId",
		a.property_company_id AS "propertyCompanyId",
		a.village_info_id AS "villageInfoId",
		a.module_id AS "moduleId",
		a.order_no AS "orderNo",
		a.order_group_no AS "orderGroupNo",
		a.order_money AS "orderMoney",
		a.Coupon_Money AS "couponMoney",
		a.deduction_money AS "deductionMoney",
		a.pay_money AS "payMoney",
		a.pay_type AS "payType",
		a.pay_org AS "payOrg",
		a.trade_complete_time AS "tradeCompleteTime",
		a.pay_check_state AS "payCheckState",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="propertyBalanceDetailJoins">
	</sql>
    
	<select id="get" resultType="PropertyBalanceDetail">
		SELECT 
			<include refid="propertyBalanceDetailColumns"/>
		FROM property_balance_detail a
		<include refid="propertyBalanceDetailJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="PropertyBalanceDetail">
		SELECT 
			<include refid="propertyBalanceDetailColumns"/>
		FROM property_balance_detail a
		<include refid="propertyBalanceDetailJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="propertyBalanceId != null and propertyBalanceId != ''">
                AND a.property_balance_Id = #{propertyBalanceId}
            </if>
            <if test="payType != null and payType != ''">
                AND a.pay_type = #{payType}
            </if>
            <if test="balanceStartTime != null and balanceEndTime != null and balanceStartTime != '' and balanceEndTime != ''">
                AND a.trade_complete_time between #{balanceStartTime} and date_add(#{balanceEndTime}, interval 1 DAY)
            </if>
        </where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PropertyBalanceDetail">
		SELECT 
			<include refid="propertyBalanceDetailColumns"/>
		FROM property_balance_detail a
		<include refid="propertyBalanceDetailJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="propertyBalanceId != null and propertyBalanceId != ''">
                AND a.property_balance_Id = #{propertyBalanceId}
            </if>
            <if test="payType != null and payType != ''">
                AND a.pay_type = #{payType}
            </if>
            <if test="balanceStartTime != null and balanceEndTime != null and balanceStartTime != '' and balanceEndTime != ''">
                AND a.trade_complete_time between #{balanceStartTime} and date_add(#{balanceEndTime}, interval 1 DAY)
            </if>
        </where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO property_balance_detail(
			id,
			property_balance_id,
			property_company_id,
			village_info_id,
			module_id,
			order_no,
			order_group_no,
			order_money,
			Coupon_Money,
			deduction_money,
			pay_money,
			pay_type,
			pay_org,
			trade_complete_time,
			pay_check_state,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{propertyBalanceId},
			#{propertyCompanyId},
			#{villageInfoId},
			#{moduleId},
			#{orderNo},
			#{orderGroupNo},
			#{orderMoney},
			#{couponMoney},
			#{deductionMoney},
			#{payMoney},
			#{payType},
			#{payOrg},
			#{tradeCompleteTime},
			#{payCheckState},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE property_balance_detail SET 	
			property_balance_id = #{propertyBalanceId},
			property_company_id = #{propertyCompanyId},
			village_info_id = #{villageInfoId},
			module_id = #{moduleId},
			order_no = #{orderNo},
			order_group_no = #{orderGroupNo},
			order_money = #{orderMoney},
			Coupon_Money = #{couponMoney},
			deduction_money = #{deductionMoney},
			pay_money = #{payMoney},
			pay_type = #{payType},
			pay_org = #{payOrg},
			trade_complete_time = #{tradeCompleteTime},
			pay_check_state = #{payCheckState},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE property_balance_detail SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
    <select id="findListByBalanceCycle" resultType="PropertyBalanceDetail">
       SELECT
            bi.id AS businessInfoId,
            o.module_id AS moduleId,
            o.order_no AS orderNo,
            o.order_no AS orderGroupNo,
            o.pay_money AS orderMoney,
            o.Coupon_Money AS DiscountMoney,
            CASE 
                WHEN bi.balance_model='0' THEN  (o.Pay_Money+o.Coupon_Money)*bi.Collect_fees/100 
                ELSE  bi.Collect_Fees 
            END AS deductionMoney,
            o.Pay_Money+o.Coupon_Money-
            CASE 
                WHEN bi.balance_model='0' THEN  (o.Pay_Money+o.Coupon_Money)*bi.Collect_fees/100 
                ELSE  bi.Collect_Fees 
            END AS payMoney,
            o.Pay_Type AS payType,
            o.Pay_Org AS payOrg,
            o.pay_time AS tradeCompleteTime
        FROM
            property_bill o,
            property_company bi
        WHERE
            o.check_state = '0'
        AND o.property_company_id = bi.id
        AND o.Pay_State = '1'
        AND o.del_flag = #{DEL_FLAG_NORMAL}
      <if test="balanceStartTime != null and balanceEndTime != null and balanceStartTime != '' and balanceEndTime != ''">
        AND o.pay_time BETWEEN #{balanceStartTime} AND #{balanceEndTime}
      </if>
    </select>
    
    <update id="updateCheckState">
        UPDATE 
            property_bill
        SET
            <!-- 结算时间为当前时间 -->
            check_time = now(),
            <!-- 已结算 -->
            check_state = '1'
        WHERE order_no = #{orderNo}
    </update>
        
    <select id="findExportList" resultType="PropertyBalanceDetail">
        SELECT
            @rownum := @rownum + 1 AS serialNum,
            b.company_name AS companyName,
            d.village_name AS villageName,
            c.module_name AS moduleName,
            a.order_group_no AS orderGroupNo,
            a.order_money AS orderMoney,
            a.deduction_money AS deductionMoney,
            a.pay_money AS payMoney,
            a.pay_type AS payType,
            a.pay_org AS payOrg,
            a.trade_complete_time AS tradeCompleteTime,
            a.pay_check_state AS payCheckState
        FROM
            (SELECT @rownum := 0) r,
            property_balance_detail a,
            property_company b,
            module_manage c,
            village_info d
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            AND a.property_company_id = b.id
            AND a.module_id = c.id
            AND a.village_info_id = d.id
            <if test="propertyBalanceId != null and propertyBalanceId != ''">
                AND a.property_balance_Id = #{propertyBalanceId}
            </if>
            <if test="payType != null and payType != ''">
                AND a.pay_type = #{payType}
            </if>
            <if test="balanceStartTime != null and balanceEndTime != null and balanceStartTime != '' and balanceEndTime != ''">
                AND a.trade_complete_time between #{balanceStartTime} and date_add(#{balanceEndTime}, interval 1 DAY)
            </if>
        </where>
    </select>
</mapper>