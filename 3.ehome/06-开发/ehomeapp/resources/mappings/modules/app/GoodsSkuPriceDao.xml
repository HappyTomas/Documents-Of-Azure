<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.its.modules.app.dao.GoodsSkuPriceDao">
    
	<sql id="goodsSkuPriceColumns">
		a.id AS "id",
		a.goods_info_id AS "goodsInfoId",
		a.sku_key_id AS "skuKeyId",
		a.sku_value_id AS "skuValueId",
		a.sort_order AS "sortOrder",
		a.base_price AS "basePrice",
		a.benefit_price AS "benefitPrice",
		a.stock AS "stock",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="goodsSkuPriceJoins">
	</sql>
    
	<select id="get" resultType="GoodsSkuPrice">
		SELECT 
			<include refid="goodsSkuPriceColumns"/>
		FROM goods_sku_price a
		<include refid="goodsSkuPriceJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="GoodsSkuPrice">
		SELECT 
			<include refid="goodsSkuPriceColumns"/>
		FROM goods_sku_price a
		<include refid="goodsSkuPriceJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="GoodsSkuPrice">
		SELECT 
			<include refid="goodsSkuPriceColumns"/>
		FROM goods_sku_price a
		<include refid="goodsSkuPriceJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO goods_sku_price(
			id,
			goods_info_id,
			sku_key_id,
			sku_value_id,
			sort_order,
			base_price,
			benefit_price,
			stock,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{goodsInfoId},
			#{skuKeyId},
			#{skuValueId},
			#{sortOrder},
			#{basePrice},
			#{benefitPrice},
			#{stock},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE goods_sku_price SET 	
			goods_info_id = #{goodsInfoId},
			sku_key_id = #{skuKeyId},
			sku_value_id = #{skuValueId},
			sort_order = #{sortOrder},
			base_price = #{basePrice},
			benefit_price = #{benefitPrice},
			stock = #{stock},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE goods_sku_price SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 获取商品规格集合 -->
	<select id="getGoodsSkuList" resultType="GoodsSkuBean">
		SELECT <include refid="goodsSkuPriceColumns"/>,b.name AS skuValueName,c.name AS skuKeyName
		 from goods_sku_price a,sku_value b,sku_key c
		<where>
			 a.Del_Flag=0 AND b.Del_Flag=0 AND c.del_flag=0 AND a.Sku_Value_ID=b.ID AND a.sku_key_id=c.id
			AND a.Goods_Info_ID=#{goodsInfoID}
		</where>
		ORDER BY a.sort_order
	</select>
	
	<!-- 根据商品ID，规格名称ID，规格列表ID更新商品规格库存 -->
	<update id="updateStock">
		UPDATE Goods_Sku_Price a
		SET a.Stock = a.Stock + #{count}
		WHERE
			a.Goods_Info_ID = #{goodsInfoId}
		AND a.Sku_Key_ID = #{skuKeyId}
		AND a.Sku_Value_ID = #{skuValueId}
		AND a.Del_Flag = '0'
	</update>
	
</mapper>