<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.its.modules.app.dao.RoomCertifyDao">
    
	<sql id="roomCertifyColumns">
		a.id AS "id",
		a.village_info_id AS "villageInfoId",
		a.building_id AS "buildingId",
		a.building_name AS "buildingName",
		a.floor_code AS "floorCode",
		a.room_name AS "roomName",
		a.customer_type AS "customerType",
		a.customer_name AS "customerName",
		a.phone_num AS "phoneNum",
		a.customer_id AS "customerId",
		a.customer_update_time AS "customerUpdateTime",
		a.account_id AS "accountId",
		a.room_update_time AS "roomUpdateTime",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="roomCertifyJoins">
	</sql>
    
	<select id="get" resultType="RoomCertify">
		SELECT 
			<include refid="roomCertifyColumns"/>
		FROM room_certify a
		<include refid="roomCertifyJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="RoomCertify">
		SELECT 
			<include refid="roomCertifyColumns"/>
		FROM room_certify a
		<include refid="roomCertifyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="RoomCertify">
		SELECT 
			<include refid="roomCertifyColumns"/>
		FROM room_certify a
		<include refid="roomCertifyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO room_certify(
			id,
			village_info_id,
			building_id,
			building_name,
			floor_code,
			room_name,
			customer_type,
			customer_name,
			phone_num,
			customer_id,
			customer_update_time,
			account_id,
			room_update_time,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{villageInfoId},
			#{buildingId},
			#{buildingName},
			#{floorCode},
			#{roomName},
			#{customerType},
			#{customerName},
			#{phoneNum},
			#{customerId},
			#{customerUpdateTime},
			#{accountId},
			#{roomUpdateTime},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE room_certify SET 	
			village_info_id = #{villageInfoId},
			building_id = #{buildingId},
			building_name = #{buildingName},
			floor_code = #{floorCode},
			room_name = #{roomName},
			customer_type = #{customerType},
			customer_name = #{customerName},
			phone_num = #{phoneNum},
			customer_id = #{customerId},
			customer_update_time = #{customerUpdateTime},
			account_id = #{accountId},
			room_update_time = #{roomUpdateTime},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE room_certify SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 查询用户当前楼盘下认证的房间 -->
	<select id="getAccountRoomCertify" resultType="RoomCertify">
		SELECT DISTINCT
			<include refid="roomCertifyColumns"/>
		FROM
			room_certify a
		WHERE
			a.del_flag = 0
		AND a.account_id = #{accountId}
		AND a.village_info_id = #{villageInfoId}
	</select>
	
	<!-- 判断某用户某楼盘下是否存在某认证房间 -->
	<select id="judgeRoomCertify" resultType="RoomCertify">
		SELECT DISTINCT
		<include refid="roomCertifyColumns"/>
		FROM
			room_certify a
		WHERE
			a.del_flag = 0
		AND a.account_id = #{accountId}
		AND a.village_info_id = #{villageInfoId}
		AND a.ID = #{roomCertifyId}
	</select>
	
</mapper>