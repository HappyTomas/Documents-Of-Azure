/**
 * Copyright &copy; 2012-2014 <a href="https://its111.com">Its111</a> All rights reserved.
 */
package com.its.modules.goods.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.its.common.persistence.Page;
import com.its.common.service.CrudService;
import com.its.modules.goods.entity.SortInfo;
import com.its.modules.sys.entity.User;
import com.its.modules.sys.utils.UserUtils;
import com.its.modules.goods.dao.SortInfoDao;

/**
 * 商品分类信息Service
 * 
 * @author liuhl
 * @version 2017-07-03
 */
@Service
@Transactional(readOnly = true)
public class SortInfoService extends CrudService<SortInfoDao, SortInfo> {

    public SortInfo get(String id) {
        return super.get(id);
    }

    public List<SortInfo> findList(SortInfo sortInfo) {
        return super.findList(sortInfo);
    }

    public Page<SortInfo> findPage(Page<SortInfo> page, SortInfo sortInfo) {
        page.setOrderBy("Sort_Order asc, Create_Date desc");
        return super.findPage(page, sortInfo);
    }

    @Transactional(readOnly = false)
    public void save(SortInfo sortInfo) {
        super.save(sortInfo);
    }

    @Transactional(readOnly = false)
    public void delete(SortInfo sortInfo) {
        super.delete(sortInfo);
    }

    /**
     * 分类名称重复检测
     * 
     * @param sortName
     *            画面输入的分类名称
     * @param type
     *            分类类型（0：商品，1：服务）
     * @return
     */
    public List<SortInfo> findListBySortName(String sortName, String id, String type) {
        Map<String, String> condition = new HashMap<String, String>();
        // 从SESSION中取得商家信息
        User user = UserUtils.getUser();
        // 只查询出当前用户的分类信息
        condition.put("businessInfoId", user.getBusinessinfoId());
        condition.put("name", sortName);
        condition.put("id", id);
        condition.put("type", type);
        return this.dao.findListBySortName(condition);
    }
}